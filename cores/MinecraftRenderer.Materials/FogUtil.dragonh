#ifndef FOG_UTIL_H_HEADER_GUARD
#define FOG_UTIL_H_HEADER_GUARD





float calculateFogIntensity(float cameraDepth, float maxDistance, float fogStart, float fogEnd) { // #line 8
    float distance = cameraDepth / maxDistance;
    return saturate((distance - fogStart) / (fogEnd - fogStart));
}

float calculateFogIntensityFaded(float cameraDepth, float maxDistance, float fogStart, float fogEnd, float fogAlpha) {
    float distance = cameraDepth / maxDistance;
    distance += fogAlpha;
    return saturate((distance - fogStart) / (fogEnd - fogStart));
}

vec3 applyFog(vec3 diffuse, vec3 fogColor, float fogIntensity) {
    return mix(diffuse, fogColor, fogIntensity);
}

#endif // FOG_UTIL_H_HEADER_GUARD